# Change default prefix key to C-a
unbind-key C-b
set -g prefix 'C-a'
bind-key 'C-a' send-prefix

# Make sure we're using full colors
set -g default-terminal "screen-256color"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Renumber windows when a window is closed
set -g renumber-windows on
setw -g automatic-rename on

# Find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# Start window numbers from 1
set -g base-index 1
setw -g pane-base-index 1

# Mouse support
set -g mouse on

# Set escape time so vim is responsive inside tmux
set -g escape-time 1

# Use vi keys
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Copy to the clipoard with xclip
bind -t vi-copy y copy-pipe "xclip -sel clip -i"

# Prefix r: reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Make splitting panes more understandable
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
